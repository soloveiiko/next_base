name: Trellify CI with Docker

on:
  push:
    branches:
      - staging
      - main
  pull_request:
    branches:
      - staging
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create test .env
        run: cp .env.example .env.test

      - name: Run tests in Docker container
        run: STAGE=test docker compose --env-file .env.test up --abort-on-container-exit --build

      - name: Stop test containers
        run: STAGE=test docker compose --env-file .env.test down

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy for staging
        if: github.ref == 'refs/heads/staging'
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            cd ${{ secrets.SERVER_PROJECT_PATH }}
            git checkout dev
            git pull
            [ -f .env.staging ] || cp .env.example .env.staging
            STAGE=staging docker compose --env-file .env.staging up -d --build

      - name: Deploy for main
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            cd ${{ secrets.SERVER_PROJECT_PATH }}
            git checkout main
            git pull
            [ -f .env.production ] || cp .env.example .env.production
            STAGE=production docker compose --env-file .env.production up -d --build